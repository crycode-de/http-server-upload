name: Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
    push:
        branches:
            - "*"
        tags:
            # normal versions
            - "v[0-9]+.[0-9]+.[0-9]+"
            # pre-releases
            - "v[0-9]+.[0-9]+.[0-9]+-**"
    pull_request: {}

jobs:

    lint:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Use Node.js 20.x
              uses: actions/setup-node@v3
              with:
                  node-version: 20.x

            - name: Install Dependencies
              run: npm ci

            - name: Run Lint
              run: npm run lint

    tests:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [14.x, 16.x, 18.x, 20.x]

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install Dependencies
              run: npm ci

            - name: Run tests
              run: npm run test

    # Deploys the final package to NPM
    deploy:
        needs: [lint, tests]

        # Trigger this step only when a commit on master is tagged with a version number
        if: |
            contains(github.event.head_commit.message, '[skip ci]') == false &&
            github.event_name == 'push' &&
            startsWith(github.ref, 'refs/tags/v')
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Use Node.js 20.x
              uses: actions/setup-node@v3
              with:
                  node-version: 20.x

            - name: Extract the version and commit body from the tag
              id: extract_release
              # The body may be multiline, therefore newlines and % need to be escaped
              run: |
                  VERSION="${{ github.ref }}"
                  VERSION=${VERSION##*/v}
                  echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
                  git show -s --format=%b > .gh-release-notes.txt

            - name: Create package
              run: npm pack

            - name: Publish package to npm
              run: |
                  npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
                  npm publish

            - name: Create Github Release
              uses: softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
              with:
                  body_path: .gh-release-notes.txt
                  name: Release v${{ steps.extract_release.outputs.VERSION }}
                  # Prerelease versions create prereleases on Github
                  prerelease: ${{ contains(steps.extract_release.outputs.VERSION, '-') }}
                  generate_release_notes: true
                  files: |
                      http-server-upload-${{ steps.extract_release.outputs.VERSION }}.tgz
